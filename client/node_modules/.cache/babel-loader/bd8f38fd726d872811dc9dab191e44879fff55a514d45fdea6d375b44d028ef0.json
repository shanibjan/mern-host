{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/Projects/MERN/client/src/components/SensorChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst SensorChart = ({\n  data,\n  label\n}) => {\n  const chartData = {\n    labels: data.map(entry => new Date(entry.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label,\n      data: data.map(entry => entry.value),\n      fill: false,\n      borderColor: 'rgba(75,192,192,1)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SensorChart","data","label","chartData","labels","map","entry","Date","timestamp","toLocaleTimeString","datasets","value","fill","borderColor","tension","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/data/Projects/MERN/client/src/components/SensorChart.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\n\nconst SensorChart = ({ data, label }) => {\n    const chartData = {\n        labels: data.map(entry => new Date(entry.timestamp).toLocaleTimeString()),\n        datasets: [\n            {\n                label,\n                data: data.map(entry => entry.value),\n                fill: false,\n                borderColor: 'rgba(75,192,192,1)',\n                tension: 0.1\n            }\n        ]\n    };\n\n    return <Line data={chartData} />;\n};\n\nexport default SensorChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3HT,OAAO,CAACU,QAAQ,CAACT,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMI,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACrC,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAEH,IAAI,CAACI,GAAG,CAACC,KAAK,IAAI,IAAIC,IAAI,CAACD,KAAK,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACzEC,QAAQ,EAAE,CACN;MACIR,KAAK;MACLD,IAAI,EAAEA,IAAI,CAACI,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACK,KAAK,CAAC;MACpCC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,oBAAoB;MACjCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBAAOhB,OAAA,CAACX,IAAI;IAACc,IAAI,EAAEE;EAAU;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACC,EAAA,GAfInB,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}