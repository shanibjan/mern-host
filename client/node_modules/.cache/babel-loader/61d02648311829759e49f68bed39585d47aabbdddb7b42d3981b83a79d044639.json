{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport SensorChart from \"../components/SensorChart\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashBoard() {\n  _s();\n  const location = useLocation();\n  const [data, setdata] = useState([]);\n  const [sensorData, setSensorData] = useState([]);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [chartData, setChartData] = useState([{\n    value: 1\n  }]);\n  let sensored = [];\n  sensored.push(sensorData);\n  console.log(sensorData);\n  sensored.map(s => {\n    console.log(s);\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/v1/sensors/simulate\");\n        setSensorData(response.data.data);\n      } catch (error) {\n        console.error(\"Error fetching sensor data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCardClick = async sensorType => {\n    console.log(sensorType);\n    setSelectedSensor(sensorType);\n    setChartData([{\n      value: sensorType,\n      date: new Date()\n    }]);\n    // try {\n    //     const response = await axios.get(`http://localhost:5000/api/v1/sensors/simulate:${sensorType}`);\n    //     setChartData(response.data);\n    // } catch (error) {\n    //     console.error(`Error fetching data for ${sensorType}:`, error);\n    // }\n  };\n\n  // useEffect(() => {\n  //     fetch('http://localhost:5000/api/v1/sensors/simulate')\n  //       .then(response => response.json())\n  //       .then(data => setdata(data.data))\n\n  //       .catch(error => console.error('Error fetching users:', error));\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"head-card\",\n        children: \"Current Sensor Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.pH),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"pH\",\n            value: sensorData.pH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.TSS),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"TSS\",\n            value: sensorData.TSS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.TDS),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"TDS\",\n            value: sensorData.TDS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.BOD),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"BOD\",\n            value: sensorData.BOD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.COD),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"COD\",\n            value: sensorData.COD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-sensor\",\n          onClick: () => handleCardClick(sensorData.pH),\n          children: /*#__PURE__*/_jsxDEV(SensorCard, {\n            title: \"chloride\",\n            value: sensorData.pH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), selectedSensor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedSensor, \" Data Over Time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SensorChart, {\n          data: chartData,\n          label: selectedSensor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DashBoard, \"nTfXU4Ui/TlDReC51/NM4jZ2BMs=\", false, function () {\n  return [useLocation];\n});\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","SensorChart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoard","_s","location","data","setdata","sensorData","setSensorData","selectedSensor","setSelectedSensor","chartData","setChartData","value","sensored","push","console","log","map","s","fetchData","response","get","error","handleCardClick","sensorType","date","Date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","pH","SensorCard","title","TSS","TDS","BOD","COD","label","_c","$RefreshReg$"],"sources":["/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport SensorChart from \"../components/SensorChart\";\n\nimport axios from \"axios\";\n\nfunction DashBoard() {\n  const location = useLocation();\n  const [data, setdata] = useState([]);\n  const [sensorData, setSensorData] = useState([]);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [chartData, setChartData] = useState([{ value: 1 }]);\n  let sensored = [];\n  sensored.push(sensorData);\n  console.log(sensorData);\n  sensored.map((s) => {\n    console.log(s);\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:5000/api/v1/sensors/simulate\"\n        );\n        setSensorData(response.data.data);\n      } catch (error) {\n        console.error(\"Error fetching sensor data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleCardClick = async (sensorType) => {\n    console.log(sensorType);\n    setSelectedSensor(sensorType);\n    setChartData([\n      {\n        value: sensorType,\n        date: new Date(),\n      },\n    ]);\n    // try {\n    //     const response = await axios.get(`http://localhost:5000/api/v1/sensors/simulate:${sensorType}`);\n    //     setChartData(response.data);\n    // } catch (error) {\n    //     console.error(`Error fetching data for ${sensorType}:`, error);\n    // }\n  };\n\n  // useEffect(() => {\n  //     fetch('http://localhost:5000/api/v1/sensors/simulate')\n  //       .then(response => response.json())\n  //       .then(data => setdata(data.data))\n\n  //       .catch(error => console.error('Error fetching users:', error));\n  //   }, []);\n  return (\n    <>\n      {/* <div className=\"cards-container\">\n      \n        \n        <div  className=\"card\">\n          <h3>pH: {data.pH}</h3>\n          <p>TSS: {data.TSS}</p>\n          <p>TDS: {data.TDS}</p>\n          <p>BOD: {data.BOD}</p>\n          <p>COD: {data.COD}</p>\n          <p>Chloride: {data.chloride}</p>\n        </div>\n     \n    </div> */}\n      <div className=\"app\">\n        <h1 className=\"head-card\" >Current Sensor Data</h1>\n        <div className=\"sensor-cards\">\n          {/* {sensored.map((sensor) => (\n                    <SensorCard\n                        key={sensor.type}\n                        title={sensor.type}\n                        value={sensor.value}\n                        onClick={() => handleCardClick(sensor.type)}\n                    />\n                ))} */}\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.pH)}>\n            <SensorCard title={\"pH\"} value={sensorData.pH} />\n          </div>\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.TSS)}>\n            <SensorCard title={\"TSS\"} value={sensorData.TSS} />\n          </div>\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.TDS)}>\n            <SensorCard title={\"TDS\"} value={sensorData.TDS} />\n          </div>\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.BOD)}>\n            <SensorCard title={\"BOD\"} value={sensorData.BOD} />\n          </div>\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.COD)}>\n            <SensorCard title={\"COD\"} value={sensorData.COD} />\n          </div>\n          <div className=\"card-sensor\" onClick={() => handleCardClick(sensorData.pH)}>\n            <SensorCard title={\"chloride\"} value={sensorData.pH} />\n          </div>\n        </div>\n        {selectedSensor && (\n          <div className=\"chart-container\">\n            <h2>{selectedSensor} Data Over Time</h2>\n            <SensorChart data={chartData} label={selectedSensor} />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default DashBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}