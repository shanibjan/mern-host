{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SensorChart from '../components/SensorChart';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashBoard() {\n  _s();\n  const location = useLocation();\n  const [data, setdata] = useState([]);\n  const [sensorData, setSensorData] = useState([]);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  console.log(sensorData);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/v1/sensors/simulate');\n        setSensorData(response.data);\n      } catch (error) {\n        console.error('Error fetching sensor data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCardClick = async sensorType => {\n    setSelectedSensor(sensorType);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/sensor-data/${sensorType}`);\n      setChartData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data for ${sensorType}:`, error);\n    }\n  };\n\n  // useEffect(() => {\n  //     fetch('http://localhost:5000/api/v1/sensors/simulate')\n  //       .then(response => response.json())\n  //       .then(data => setdata(data.data))\n\n  //       .catch(error => console.error('Error fetching users:', error));\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"pH: \", data.pH]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TSS: \", data.TSS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TDS: \", data.TDS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"BOD: \", data.BOD]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"COD: \", data.COD]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chloride: \", data.chloride]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(DashBoard, \"Nr2Uwm3rC2u/Z1jis9H1kb4CD4g=\", false, function () {\n  return [useLocation];\n});\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","SensorChart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoard","_s","location","data","setdata","sensorData","setSensorData","selectedSensor","setSelectedSensor","chartData","setChartData","console","log","fetchData","response","get","error","handleCardClick","sensorType","children","className","pH","fileName","_jsxFileName","lineNumber","columnNumber","TSS","TDS","BOD","COD","chloride","_c","$RefreshReg$"],"sources":["/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport SensorChart from '../components/SensorChart'\nimport axios from 'axios'\n\nfunction DashBoard() {\n    const location=useLocation()\n    const [data,setdata]=useState([])\n    const [sensorData, setSensorData] = useState([]);\n    const [selectedSensor, setSelectedSensor] = useState(null);\n    const [chartData, setChartData] = useState([]);\n    console.log(sensorData);\n\n    useEffect(() => {\n      const fetchData = async () => {\n          try {\n              const response = await axios.get('http://localhost:5000/api/v1/sensors/simulate');\n              setSensorData(response.data);\n          } catch (error) {\n              console.error('Error fetching sensor data:', error);\n          }\n      };\n\n      fetchData();\n  }, []);\n\n\n  const handleCardClick = async (sensorType) => {\n    setSelectedSensor(sensorType);\n    try {\n        const response = await axios.get(`http://localhost:5000/api/sensor-data/${sensorType}`);\n        setChartData(response.data);\n    } catch (error) {\n        console.error(`Error fetching data for ${sensorType}:`, error);\n    }\n};\n\n    // useEffect(() => {\n    //     fetch('http://localhost:5000/api/v1/sensors/simulate')\n    //       .then(response => response.json())\n    //       .then(data => setdata(data.data))\n            \n    //       .catch(error => console.error('Error fetching users:', error));\n    //   }, []);\n  return (\n    <>\n        <div className=\"cards-container\">\n      \n        \n        <div  className=\"card\">\n          <h3>pH: {data.pH}</h3>\n          <p>TSS: {data.TSS}</p>\n          <p>TDS: {data.TDS}</p>\n          <p>BOD: {data.BOD}</p>\n          <p>COD: {data.COD}</p>\n          <p>Chloride: {data.chloride}</p>\n        </div>\n     \n    </div>\n\n    </>\n  )\n}\n\nexport default DashBoard\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAACT,WAAW,CAAC,CAAC;EAC5B,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9CmB,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;EAEvBd,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,+CAA+C,CAAC;QACjFT,aAAa,CAACQ,QAAQ,CAACX,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDH,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMI,eAAe,GAAG,MAAOC,UAAU,IAAK;IAC5CV,iBAAiB,CAACU,UAAU,CAAC;IAC7B,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,yCAAyCG,UAAU,EAAE,CAAC;MACvFR,YAAY,CAACI,QAAQ,CAACX,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,2BAA2BE,UAAU,GAAG,EAAEF,KAAK,CAAC;IAClE;EACJ,CAAC;;EAEG;EACA;EACA;EACA;;EAEA;EACA;EACF,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,eAGhCtB,OAAA;QAAMuB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACpBtB,OAAA;UAAAsB,QAAA,GAAI,MAAI,EAAChB,IAAI,CAACkB,EAAE;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtB5B,OAAA;UAAAsB,QAAA,GAAG,OAAK,EAAChB,IAAI,CAACuB,GAAG;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5B,OAAA;UAAAsB,QAAA,GAAG,OAAK,EAAChB,IAAI,CAACwB,GAAG;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5B,OAAA;UAAAsB,QAAA,GAAG,OAAK,EAAChB,IAAI,CAACyB,GAAG;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5B,OAAA;UAAAsB,QAAA,GAAG,OAAK,EAAChB,IAAI,CAAC0B,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5B,OAAA;UAAAsB,QAAA,GAAG,YAAU,EAAChB,IAAI,CAAC2B,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC,gBAEJ,CAAC;AAEP;AAACxB,EAAA,CAzDQD,SAAS;EAAA,QACCP,WAAW;AAAA;AAAAsC,EAAA,GADrB/B,SAAS;AA2DlB,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}