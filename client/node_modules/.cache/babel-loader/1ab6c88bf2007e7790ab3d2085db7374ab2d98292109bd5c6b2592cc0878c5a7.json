{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashBoard() {\n  _s();\n  const location = useLocation();\n  const [data, setdata] = useState([]);\n  console.log(data);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/v1/sensors/simulate').then(response => response.json()).then(data => setdata(data.data)).catch(error => console.error('Error fetching users:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"pH: \", item.pH]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TSS: \", item.TSS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TDS: \", item.TDS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"BOD: \", item.BOD]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"COD: \", item.COD]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chloride: \", item.chloride]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(DashBoard, \"3LIRv/zZr4jUce99OilCq96/bzQ=\", false, function () {\n  return [useLocation];\n});\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoard","_s","location","data","setdata","console","log","fetch","then","response","json","catch","error","children","className","map","item","index","pH","fileName","_jsxFileName","lineNumber","columnNumber","TSS","TDS","BOD","COD","chloride","_c","$RefreshReg$"],"sources":["/Volumes/data/Projects/MERN/client/src/Pages/DashBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nfunction DashBoard() {\n    const location=useLocation()\n    const [data,setdata]=useState([])\n    console.log(data);\n    useEffect(() => {\n        fetch('http://localhost:5000/api/v1/sensors/simulate')\n          .then(response => response.json())\n          .then(data => setdata(data.data))\n            \n          .catch(error => console.error('Error fetching users:', error));\n      }, []);\n  return (\n    <>\n        <div className=\"cards-container\">\n      {data.map((item, index) => (\n        <div key={index} className=\"card\">\n          <h3>pH: {item.pH}</h3>\n          <p>TSS: {item.TSS}</p>\n          <p>TDS: {item.TDS}</p>\n          <p>BOD: {item.BOD}</p>\n          <p>COD: {item.COD}</p>\n          <p>Chloride: {item.chloride}</p>\n        </div>\n      ))}\n    </div>\n\n    </>\n  )\n}\n\nexport default DashBoard\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAACP,WAAW,CAAC,CAAC;EAC5B,MAAM,CAACQ,IAAI,EAACC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EACjCW,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjBV,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACL,IAAI,IAAIC,OAAO,CAACD,IAAI,CAACA,IAAI,CAAC,CAAC,CAEhCQ,KAAK,CAACC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EACV,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EACjCV,IAAI,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBpB,OAAA;QAAiBiB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBAC/BhB,OAAA;UAAAgB,QAAA,GAAI,MAAI,EAACG,IAAI,CAACE,EAAE;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,GAAG,OAAK,EAACG,IAAI,CAACO,GAAG;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,GAAG,OAAK,EAACG,IAAI,CAACQ,GAAG;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,GAAG,OAAK,EAACG,IAAI,CAACS,GAAG;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,GAAG,OAAK,EAACG,IAAI,CAACU,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACG,IAAI,CAACW,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GANxBL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBAEJ,CAAC;AAEP;AAACrB,EAAA,CA5BQD,SAAS;EAAA,QACCL,WAAW;AAAA;AAAAiC,EAAA,GADrB5B,SAAS;AA8BlB,eAAeA,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}